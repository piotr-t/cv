{"ast":null,"code":"import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/progress-spinner\";\nimport * as i4 from \"./header/header.component\";\nimport * as i5 from \"./footer/footer.component\";\nimport * as i6 from \"./aside/aside.component\";\nimport * as i7 from \"./aside/aside-icons.directive\";\nconst _c0 = [\"counter1\"];\n\nfunction AppComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"div\", 4);\n    i0.ɵɵelement(3, \"app-header\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 4);\n    i0.ɵɵelement(5, \"router-outlet\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 6);\n    i0.ɵɵelement(7, \"app-footer\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(8, \"app-aside\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.contrast === true ? \"noContrast\" : \"contrastt\")(\"@startAnimation\", undefined);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"@startAnimation\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"@startAnimation\", undefined);\n  }\n}\n\nfunction AppComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"margin-top\", ctx_r2.windowH / 20 + \"px\");\n    i0.ɵɵproperty(\"diameter\", ctx_r2.windowH - ctx_r2.windowH / 10)(\"strokeWidth\", ctx_r2.windowH / 20)(\"color\", \"warn\");\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(scroller) {\n      this.scroller = scroller;\n      this.lessons = false;\n      this.showNavUp = false;\n      this.windowH = 100;\n    }\n\n    onScrollNav() {\n      let xPos = this.scroller.getScrollPosition()[1];\n\n      if (window.scrollY > this.windowH / 10) {\n        this.showNavUp = true;\n      } else {\n        this.showNavUp = false;\n      }\n\n      ;\n    }\n\n    ngAfterViewInit() {\n      setTimeout(() => {\n        this.lessons = true;\n      }, 1);\n      console.log(window.navigator.language);\n    }\n\n    ngOnInit() {\n      this.windowH = window.innerHeight;\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ViewportScroller));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.counter1 = _t.first);\n      }\n    },\n    hostBindings: function AppComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"scroll\", function AppComponent_scroll_HostBindingHandler($event) {\n          return ctx.onScrollNav($event.target);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    decls: 3,\n    vars: 2,\n    consts: [[\"class\", \"container-fluid pt-3 px-0 gx-0\", 3, \"ngClass\", 4, \"ngIf\", \"ngIfElse\"], [\"spinnerTemp\", \"\"], [1, \"container-fluid\", \"pt-3\", \"px-0\", \"gx-0\", 3, \"ngClass\"], [1, \"row\", \"cont\"], [1, \"col-12\"], [\"AsideIcons\", \"\", \"AsideIconsTop\", \"300\", \"AsideIcons\", \"2\", \"id\", \"header\", 1, \"row\", \"m-0\", \"p-0\"], [1, \"col-12\", \"align-self-end\"], [1, \"row\", \"m-0\", \"p-0\", \"gx-0\"], [1, \"fixed-bottom\", \"col-1\", \"m-5\"], [1, \"mx-auto\", 3, \"diameter\", \"strokeWidth\", \"color\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AppComponent_div_0_Template, 9, 4, \"div\", 0);\n        i0.ɵɵtemplate(1, AppComponent_ng_template_1_Template, 1, 5, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n\n        i0.ɵɵproperty(\"ngIf\", ctx.lessons)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgIf, i2.RouterOutlet, i3.MatProgressSpinner, i4.HeaderComponent, i5.FooterComponent, i6.AsideComponent, i7.AsideIconsDirective],\n    styles: [\"app-aside[_ngcontent-%COMP%]{left:85%}.contrastt[_ngcontent-%COMP%]{background-image:url(texture-background.jpg);background-repeat:no-repeat;background-position:center;background-size:cover}.contrastt[_ngcontent-%COMP%], .noContrast[_ngcontent-%COMP%], .cont[_ngcontent-%COMP%]{min-height:100vh}\"],\n    data: {\n      animation: [trigger('startAnimation', [transition(':enter', [style({\n        opacity: 0\n      }), animate('1s ease-out', style({\n        opacity: 1\n      }))])]), trigger('startCounter', [state('trr', style({\n        width: '100%'\n      })), state('false', style({\n        width: '0%'\n      })), transition('* => trr', animate(\"50ms\"))])]\n    }\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}